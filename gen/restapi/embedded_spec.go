// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "Gateway endpoint of a CEC Platform v2, serves as a proxy and one swagger to rule them all. \nFind more at Close Encounters Corps Discord server!\n",
    "title": "CEC Gateway",
    "version": "0.1.0"
  },
  "basePath": "/api",
  "paths": {
    "/0/login/discord": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "private"
        ],
        "summary": "Authenticate using Discord",
        "operationId": "loginDiscord",
        "parameters": [
          {
            "type": "string",
            "description": "Second phase: State to fetch from CEC Auth",
            "name": "state",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Phase successful",
            "schema": {
              "type": "string",
              "$ref": "#/definitions/AuthPhaseResult"
            }
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/0/users/current": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "private"
        ],
        "summary": "Get current user",
        "operationId": "currentUser",
        "parameters": [
          {
            "type": "string",
            "description": "Token got from /login",
            "name": "x-auth-token",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "schema": {
              "type": "string",
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AuthPhaseResult": {
      "type": "object",
      "properties": {
        "next_url": {
          "type": "string"
        },
        "phase": {
          "type": "integer",
          "format": "int32"
        },
        "token": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "Principal": {
      "type": "object",
      "properties": {
        "admin": {
          "type": "boolean"
        },
        "created_on": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "last_login": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "principal": {
          "$ref": "#/definitions/Principal"
        }
      }
    }
  },
  "tags": [
    {
      "description": "Private API. Do not use!",
      "name": "private"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "Gateway endpoint of a CEC Platform v2, serves as a proxy and one swagger to rule them all. \nFind more at Close Encounters Corps Discord server!\n",
    "title": "CEC Gateway",
    "version": "0.1.0"
  },
  "basePath": "/api",
  "paths": {
    "/0/login/discord": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "private"
        ],
        "summary": "Authenticate using Discord",
        "operationId": "loginDiscord",
        "parameters": [
          {
            "type": "string",
            "description": "Second phase: State to fetch from CEC Auth",
            "name": "state",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Phase successful",
            "schema": {
              "type": "string",
              "$ref": "#/definitions/AuthPhaseResult"
            }
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/0/users/current": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "private"
        ],
        "summary": "Get current user",
        "operationId": "currentUser",
        "parameters": [
          {
            "type": "string",
            "description": "Token got from /login",
            "name": "x-auth-token",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "schema": {
              "type": "string",
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AuthPhaseResult": {
      "type": "object",
      "properties": {
        "next_url": {
          "type": "string"
        },
        "phase": {
          "type": "integer",
          "format": "int32"
        },
        "token": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "Principal": {
      "type": "object",
      "properties": {
        "admin": {
          "type": "boolean"
        },
        "created_on": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "last_login": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "principal": {
          "$ref": "#/definitions/Principal"
        }
      }
    }
  },
  "tags": [
    {
      "description": "Private API. Do not use!",
      "name": "private"
    }
  ]
}`))
}
